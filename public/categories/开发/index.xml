<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开发 - 分类 - lack 的个人博客</title>
        <link>http://xingyys.tech/categories/%E5%BC%80%E5%8F%91/</link>
        <description>开发 - 分类 - lack 的个人博客</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 09 Jan 2021 17:06:14 &#43;0800</lastBuildDate><atom:link href="http://xingyys.tech/categories/%E5%BC%80%E5%8F%91/" rel="self" type="application/rss+xml" /><item>
    <title>Golang监控进程流量</title>
    <link>http://xingyys.tech/posts/go/golang%E7%9B%91%E6%8E%A7%E8%BF%9B%E7%A8%8B%E6%B5%81%E9%87%8F/</link>
    <pubDate>Sat, 09 Jan 2021 17:06:14 &#43;0800</pubDate><author>
        <name>Lack</name>
    </author><guid>http://xingyys.tech/posts/go/golang%E7%9B%91%E6%8E%A7%E8%BF%9B%E7%A8%8B%E6%B5%81%E9%87%8F/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>Windows 上使用 Go 语言</title>
    <link>http://xingyys.tech/posts/go/windows%E4%B8%8A%E4%BD%BF%E7%94%A8go%E8%AF%AD%E8%A8%80%E5%BC%80%E5%8F%91/</link>
    <pubDate>Thu, 29 Oct 2020 16:44:06 &#43;0800</pubDate><author>
        <name>Lack</name>
    </author><guid>http://xingyys.tech/posts/go/windows%E4%B8%8A%E4%BD%BF%E7%94%A8go%E8%AF%AD%E8%A8%80%E5%BC%80%E5%8F%91/</guid>
    <description><![CDATA[在 Windows 使用 Go 开发项目是，为了实现统一的配置和格式管理，需要进行一下的配置。
开发环境选择 Go 语言的开发环境统一使用 Jetbrain 公司的 Goland。之后需要进行一些配置。 修改统一的文件换行符为 \n 。
settings &gt; Editor &gt; Code Style
添加格式化工具 goimports。goimports 同时内置了 gofmt 的功能。可以格式化 Go 代理、自动导入依赖包等。
settings &gt; Editor &gt; Code Style &gt; Go
设置文件自动格式化
settings &gt; Tools &gt; File Watch
配置远程主机代码同步（可选）
Tools &gt; Deployment &gt; Configuration
Git 配置 文本文件所使用的换行符，在不同的系统平台上是不一样的。 UNIX/Linux 使用的是 0x0A（LF） ，早期的 Mac OS 使用的是 0x0D（CR） ，后来的 OS X 在更换内核后与 UNIX 保持一致了。但 DOS/Windows 一直使用 0x0D0A（CRLF） 作为换行符。
跨平台协作开发是常有的，不统一的换行符确实对跨平台的文件交换带来了麻烦。最大的问题是，在不同平台上，换行符发生改变时，Git 会认为整个文件被修改，这就造成我们没法 diff，不能正确反映本次的修改。还好 Git 在设计时就考虑了这一点，其提供了一个 autocrlf 的配置项，用于在提交和检出时自动转换换行符，该配置有三个可选项：]]></description>
</item></channel>
</rss>
