<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - YZJ 的博客</title>
        <link>http://example.org/posts/</link>
        <description>所有文章 | YZJ 的博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>935669265@qq.com (yzj)</managingEditor>
            <webMaster>935669265@qq.com (yzj)</webMaster><lastBuildDate>Mon, 11 Apr 2022 23:24:19 &#43;0800</lastBuildDate><atom:link href="http://example.org/posts/" rel="self" type="application/rss+xml" /><item>
    <title>空切片和nil切片</title>
    <link>http://example.org/%E7%A9%BA%E5%88%87%E7%89%87%E5%92%8Cnil%E5%88%87%E7%89%87/</link>
    <pubDate>Mon, 11 Apr 2022 23:24:19 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/%E7%A9%BA%E5%88%87%E7%89%87%E5%92%8Cnil%E5%88%87%E7%89%87/</guid>
    <description><![CDATA[空切片和nil切片 问题： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 package main import ( &#34;fmt&#34; &#34;reflect&#34; &#34;unsafe&#34; ) func main() { var s1 []int // nil切片 s2 := make([]int,0) // 空切片 s4 := make([]int,0) // 空切片 fmt.Printf(&#34;s1 pointer:%+v, s2 pointer:%+v, s4 pointer:%+v,]]></description>
</item><item>
    <title>Channel</title>
    <link>http://example.org/channel/</link>
    <pubDate>Mon, 11 Apr 2022 23:07:42 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/channel/</guid>
    <description><![CDATA[对未初始化的的chan进行读写，会怎么样？为什么？ 答： 写未初始化的 chan 1 2 3 4 5 6 7 8 9 10 11 12 13 package main // 写未初始化的chan func main() { var c chan int c &lt;- 1]]></description>
</item><item>
    <title>面试题</title>
    <link>http://example.org/for-select%E6%97%B6%E5%A6%82%E6%9E%9C%E9%80%9A%E9%81%93%E5%B7%B2%E7%BB%8F%E5%85%B3%E9%97%AD%E4%BC%9A%E6%80%8E%E4%B9%88%E6%A0%B7/</link>
    <pubDate>Mon, 11 Apr 2022 22:52:11 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/for-select%E6%97%B6%E5%A6%82%E6%9E%9C%E9%80%9A%E9%81%93%E5%B7%B2%E7%BB%8F%E5%85%B3%E9%97%AD%E4%BC%9A%E6%80%8E%E4%B9%88%E6%A0%B7/</guid>
    <description><![CDATA[1.for select时，如果通道已经关闭会怎么样？如果select中只有一个case呢？ 答： for循环select时，如果其中一个case通道已经]]></description>
</item><item>
    <title>零拷贝</title>
    <link>http://example.org/%E9%9B%B6%E6%8B%B7%E8%B4%9D/</link>
    <pubDate>Mon, 11 Apr 2022 22:21:21 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/%E9%9B%B6%E6%8B%B7%E8%B4%9D/</guid>
    <description><![CDATA[零拷贝 传统的I/O操作基本上要分为四步： 磁盘文件读入操作系统 操作系统读到用户进程 用户进程写到操作系统 操作系统写入磁盘文件 零拷贝就是指，传输一]]></description>
</item><item>
    <title>Mangodb的基础使用</title>
    <link>http://example.org/mangodb%E7%9A%84%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</link>
    <pubDate>Fri, 08 Apr 2022 10:34:04 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/mangodb%E7%9A%84%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</guid>
    <description><![CDATA[MangoDB的基础 MongoDB是一个基于分布式文件存储的数据库。默认端口为27017]]></description>
</item><item>
    <title>微信支付的接口</title>
    <link>http://example.org/payment/</link>
    <pubDate>Fri, 08 Apr 2022 09:49:46 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/payment/</guid>
    <description><![CDATA[微信支付V3 整理整体流程]]></description>
</item><item>
    <title>gin 常用中间件</title>
    <link>http://example.org/gin/</link>
    <pubDate>Tue, 08 Feb 2022 10:17:16 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/gin/</guid>
    <description><![CDATA[日志 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 // 日志记录到文件 func (d *Handler) LoggerToFile() gin.HandlerFunc { return func(c *gin.Context) {]]></description>
</item><item>
    <title>Aix添加和删除Iscsi存储卷</title>
    <link>http://example.org/aix1/</link>
    <pubDate>Fri, 03 Dec 2021 10:17:16 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/aix1/</guid>
    <description><![CDATA[Aix添加和删除Iscsi存储卷 Aix为6.1版本 使用iscsi存储 首先需要创建一个iscsi target，并共享到IBM Aix上。 检查is]]></description>
</item><item>
    <title>C&#43;&#43;友元</title>
    <link>http://example.org/c-%E5%8F%8B%E5%85%83/</link>
    <pubDate>Fri, 03 Dec 2021 10:17:16 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/c-%E5%8F%8B%E5%85%83/</guid>
    <description><![CDATA[C++友元 友元说明 相对于其他的编程语言，“友元”是C++中特别的一种语法。那它有什么作用呢？ 其实“友元”就是提供一种访问类私有部分的的方法。]]></description>
</item><item>
    <title>CentOS7 安装 qemu-5.2.0</title>
    <link>http://example.org/centos7_install_qemu/</link>
    <pubDate>Fri, 03 Dec 2021 10:17:16 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/centos7_install_qemu/</guid>
    <description><![CDATA[CentOS7 安装 qemu-5.2.0 本文介绍在 CentOS7.9 上编译安装 qemu-5.2.0 安装 Python3 编译安装 qemu-5.2.0 依赖 Python3.6 及以上的版本。所以首先安装 Python3.6。这里选择编译安装。 下载 Python3.6.12 从 Python 官网下载 Python3.6.12 源]]></description>
</item></channel>
</rss>
