<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on YZJ 的博客</title>
    <link>http://example.org/posts/</link>
    <description>Recent content in Posts on YZJ 的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <managingEditor>935669265@qq.com (yzj)</managingEditor>
    <webMaster>935669265@qq.com (yzj)</webMaster>
    <lastBuildDate>Fri, 08 Apr 2022 09:49:46 +0800</lastBuildDate><atom:link href="http://example.org/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>微信支付的接口</title>
      <link>http://example.org/payment/</link>
      <pubDate>Fri, 08 Apr 2022 09:49:46 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/payment/</guid>
      <description>微信支付V3 整理整体流程</description>
    </item>
    
    <item>
      <title>gin 常用中间件</title>
      <link>http://example.org/gin/</link>
      <pubDate>Tue, 08 Feb 2022 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/gin/</guid>
      <description>日志 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 // 日志记录到文件 func (d *Handler) LoggerToFile() gin.HandlerFunc { return func(c *gin.Context) {</description>
    </item>
    
    <item>
      <title>Aix添加和删除Iscsi存储卷</title>
      <link>http://example.org/aix1/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/aix1/</guid>
      <description>Aix添加和删除Iscsi存储卷 Aix为6.1版本 使用iscsi存储 首先需要创建一个iscsi target，并共享到IBM Aix上。 检查is</description>
    </item>
    
    <item>
      <title>C&#43;&#43;友元</title>
      <link>http://example.org/c-%E5%8F%8B%E5%85%83/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/c-%E5%8F%8B%E5%85%83/</guid>
      <description>C++友元 友元说明 相对于其他的编程语言，“友元”是C++中特别的一种语法。那它有什么作用呢？ 其实“友元”就是提供一种访问类私有部分的的方法。</description>
    </item>
    
    <item>
      <title>CentOS7 安装 qemu-5.2.0</title>
      <link>http://example.org/centos7_install_qemu/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/centos7_install_qemu/</guid>
      <description>CentOS7 安装 qemu-5.2.0 本文介绍在 CentOS7.9 上编译安装 qemu-5.2.0 安装 Python3 编译安装 qemu-5.2.0 依赖 Python3.6 及以上的版本。所以首先安装 Python3.6。这里选择编译安装。 下载 Python3.6.12 从 Python 官网下载 Python3.6.12 源</description>
    </item>
    
    <item>
      <title>CentOS下kvm安装</title>
      <link>http://example.org/centos%E4%B8%8Bkvm%E5%AE%89%E8%A3%85/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/centos%E4%B8%8Bkvm%E5%AE%89%E8%A3%85/</guid>
      <description>CentOS下kvm安装 注：运行kvm保证机器支持虚拟化且在bios中开启。 准备工作 清除iptables规则 1 2 3 4 # CentOS6 service iptables stop; service iptables save # CentOS7 systemctl stop</description>
    </item>
    
    <item>
      <title>Containerd源码分析</title>
      <link>http://example.org/containerd%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/containerd%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</guid>
      <description>Containerd源码分析 从 Kubernetes 1.22 开始，k8s 的容器运行是默认替换成 containerd。有必要深入了解 containerd 的内部实现原理。本篇通过分析 containerd 的代</description>
    </item>
    
    <item>
      <title>Dblink</title>
      <link>http://example.org/dblink/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/dblink/</guid>
      <description>Dblink 查询所有触发器 1 select*fromuser_triggers; 根据名称禁用触发器 1 altertriggerLOGMNRGGC_TRIGGERdisable; 查询所有 job 1 select*fromuser_jobs; 根据 id 禁用 job 1 BEGINdbms_job.broken(4001,true);END; 禁用 oracle dblink 1 2 altersystemsetopen_links=0sid=&amp;#39;$sid&amp;#39;scope=spfile;altersystemsetopen_links_per_instance=0sid=&amp;#39;$sid&amp;#39;scope=spfile; 启用 oracle dblink 1 2 altersystemsetopen_links=4sid=&amp;#39;$sid&amp;#39;scope=spfile;altersystemsetopen_links_per_instance=4sid=&amp;#39;$sid&amp;#39;scope=spfile;</description>
    </item>
    
    <item>
      <title>Docker容器和网络架构设计</title>
      <link>http://example.org/docker%E5%AE%B9%E5%99%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/docker%E5%AE%B9%E5%99%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/</guid>
      <description>Docker容器和网络架构设计 常用的容器化技术 Chroot 特点: 改变正在运行的进程和它的子进程根目录。 经chroot设置根目录的程序，不能够对这个指定</description>
    </item>
    
    <item>
      <title>etcd的使用实例</title>
      <link>http://example.org/etcd%E7%9A%84%E4%BD%BF%E7%94%A8%E5%AE%9E%E4%BE%8B/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/etcd%E7%9A%84%E4%BD%BF%E7%94%A8%E5%AE%9E%E4%BE%8B/</guid>
      <description>etcd的使用实例 etcd有两个版本的接口，v2和v3，且两个版本不兼容，v2已经停止了支持，v3性能更好。 注意 ：etcdctl默认使用v2</description>
    </item>
    
    <item>
      <title>Flask与Vue的token认证</title>
      <link>http://example.org/flask%E4%B8%8Evue%E7%9A%84token%E8%AE%A4%E8%AF%81/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/flask%E4%B8%8Evue%E7%9A%84token%E8%AE%A4%E8%AF%81/</guid>
      <description>Flask与Vue的token认证 后端使用flask设计基于token认证方式的restful接口，前端使用vue.js全家桶，利用axio</description>
    </item>
    
    <item>
      <title>Go 结合 etcd</title>
      <link>http://example.org/go%E7%BB%93%E5%90%88etcd/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/go%E7%BB%93%E5%90%88etcd/</guid>
      <description>Go 结合 etcd 关于 etcd 的安装和介绍看 这里 。官方的实例可以看 这里 一、连接 首先是关于 golang 如何连接 etcd ，先是简单的连接。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19</description>
    </item>
    
    <item>
      <title>Golang使用json格式实现增删查改</title>
      <link>http://example.org/golang%E4%BD%BF%E7%94%A8json%E6%A0%BC%E5%BC%8F%E5%AE%9E%E7%8E%B0%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/golang%E4%BD%BF%E7%94%A8json%E6%A0%BC%E5%BC%8F%E5%AE%9E%E7%8E%B0%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9/</guid>
      <description>Golang使用json格式实现增删查改 需求和思路 在一般的小项目或者一个小软件,例如客户端之类的小程序中,可能会需要数据的持久化.但是使用一</description>
    </item>
    
    <item>
      <title>golang打包和解包</title>
      <link>http://example.org/golang%E6%89%93%E5%8C%85%E5%92%8C%E8%A7%A3%E5%8C%85/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/golang%E6%89%93%E5%8C%85%E5%92%8C%E8%A7%A3%E5%8C%85/</guid>
      <description>golang打包和解包 打包 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57</description>
    </item>
    
    <item>
      <title>Golang监控进程流量</title>
      <link>http://example.org/golang%E7%9B%91%E6%8E%A7%E8%BF%9B%E7%A8%8B%E6%B5%81%E9%87%8F/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/golang%E7%9B%91%E6%8E%A7%E8%BF%9B%E7%A8%8B%E6%B5%81%E9%87%8F/</guid>
      <description>&lt;h1 id=&#34;golang监控进程流量&#34;&gt;Golang监控进程流量&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>Golang跨平台编译</title>
      <link>http://example.org/golang%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%AF%91/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/golang%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%AF%91/</guid>
      <description>Golang跨平台编译 golang cgo 到 Windows 的交叉编译 本篇记录在 MaxOS 下 cgo 交叉编译的解决方案。因为在项目中使用 go-sqlite3 ，编译 go-sqlite3 中需要使用到 cgo。在 MacOS 下编译 Go 原生 Linux</description>
    </item>
    
    <item>
      <title>GPRC 实战</title>
      <link>http://example.org/grpc1/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/grpc1/</guid>
      <description>GPRC 实战 GRPC 简介 grpc 是由 google 开发的一款开源，高性能 rpc（远程进程调用协议）使用 Protocol Buffers 作为数据交换格式。 GRPC 安装 golang 使用 grpc 要安装 grpc-go, protoc 和 对应的插件。 安装gr</description>
    </item>
    
    <item>
      <title>GPRC 进阶</title>
      <link>http://example.org/grpc2/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/grpc2/</guid>
      <description>GPRC 进阶 grpc 除了提供四种请求类型之外，还支持很多高级功能：keepalive、请求重试、负载均衡、用户验证等。接下来一一介绍。 GRPC 进阶功能 每个gr</description>
    </item>
    
    <item>
      <title>iscsi共享磁盘服务</title>
      <link>http://example.org/iscsi%E5%85%B1%E4%BA%AB%E7%A3%81%E7%9B%98%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/iscsi%E5%85%B1%E4%BA%AB%E7%A3%81%E7%9B%98%E6%9C%8D%E5%8A%A1/</guid>
      <description>iscsi共享磁盘服务 iscsi简单介绍 iSCSI（Internet Small Computer System Interface，发音为/ˈаɪskʌzi/），Internet</description>
    </item>
    
    <item>
      <title>KVM之虚拟机管理</title>
      <link>http://example.org/kvm_vm/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/kvm_vm/</guid>
      <description>KVM之虚拟机管理 本篇文章介绍 KVM 虚拟机的管理，包括虚拟机的创建、修改、启动、删除等内容 安装虚拟机 使用 virt-install 安装 virt-install 是一个命令行工具，专门用于安装 kvm</description>
    </item>
    
    <item>
      <title>KVM介绍</title>
      <link>http://example.org/kvm_detail/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/kvm_detail/</guid>
      <description>KVM介绍 KVM 概述 KVM (Kernal-base Virtual Machine) 基于内核的虚拟机。是一种通过修改 linux 内核实现虚拟化功能的半虚拟化技术。由于是在内核基础上运行，所有具有接近物理机的高性</description>
    </item>
    
    <item>
      <title>KVM镜像管理工具libguestfs</title>
      <link>http://example.org/libguestfs/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/libguestfs/</guid>
      <description>KVM镜像管理工具libguestfs 简介 libguestfs 是一套管理虚拟机镜像的工具。它提供以一系列命令和API来修改和管理虚拟机的镜像。 安装 直接使用 yum 安</description>
    </item>
    
    <item>
      <title>linux上使用udev创建裸设备</title>
      <link>http://example.org/linux%E4%B8%8A%E4%BD%BF%E7%94%A8udev%E5%88%9B%E5%BB%BA%E8%A3%B8%E8%AE%BE%E5%A4%87/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/linux%E4%B8%8A%E4%BD%BF%E7%94%A8udev%E5%88%9B%E5%BB%BA%E8%A3%B8%E8%AE%BE%E5%A4%87/</guid>
      <description>linux上使用udev创建裸设备 需求和分析 在一次项目中需要将进行oracle数据库的备份，要求在oracle机器总是能认到备份的块设备的路</description>
    </item>
    
    <item>
      <title>Linux中断和异常</title>
      <link>http://example.org/linux%E4%B8%AD%E6%96%AD%E5%92%8C%E5%BC%82%E5%B8%B8/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/linux%E4%B8%AD%E6%96%AD%E5%92%8C%E5%BC%82%E5%B8%B8/</guid>
      <description>Linux中断和异常 中断(interrupt)通常被定义为一个事件，该事件改变处理器执行的指令顺序。这样的事件与CPU芯片内外部硬件电路产生</description>
    </item>
    
    <item>
      <title>Linux内存</title>
      <link>http://example.org/linux%E5%86%85%E5%AD%98/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/linux%E5%86%85%E5%AD%98/</guid>
      <description>Linux内存 内存概论 虚拟内存 虚拟内存(virtual memory)是 Unix 系统中一种对内存的抽象。虚拟内存作为一种逻辑层，处于应用程序的内存请</description>
    </item>
    
    <item>
      <title>Linux内核同步</title>
      <link>http://example.org/linux%E5%86%85%E6%A0%B8%E5%90%8C%E6%AD%A5/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/linux%E5%86%85%E6%A0%B8%E5%90%8C%E6%AD%A5/</guid>
      <description>Linux内核同步 内核抢占 抢占内核的主要特点是: 一个在内核态运行的进程，可能在执行内核函数期间被另外一个进程取代。 用实例来说明抢占内核和非抢</description>
    </item>
    
    <item>
      <title>Linux进程</title>
      <link>http://example.org/linux%E8%BF%9B%E7%A8%8B/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/linux%E8%BF%9B%E7%A8%8B/</guid>
      <description>Linux进程 进程时程序执行的一个实例，可以把它看作充分描述程序已经执行到何种程度的数据结构的汇集。在 Linux 源代码中，常把进程称为任务(task</description>
    </item>
    
    <item>
      <title>Nginx多组代理配置</title>
      <link>http://example.org/nginx%E5%A4%9A%E7%BB%84%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/nginx%E5%A4%9A%E7%BB%84%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE/</guid>
      <description>Nginx多组代理配置 一、需求 具体实现以下功能：使用 nginx 作为对外的服务机器，让客户端通过访问 nginx 所在的IP+端口的方式能访问内部多个系统，这样一</description>
    </item>
    
    <item>
      <title>postgresql 实战一：安装和使用</title>
      <link>http://example.org/pgsql%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/pgsql%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</guid>
      <description>postgresql 实战一：安装和使用 安装 这里直接使用 docker 安装 postgresql-13 1 docker run --name postgresql13 -e POSTGRES_PASSWORD=123456 -p 54322:5432 -d postgres:13 安装成功后会绑定主机端口 54322。直接进入 postgresql13 容器，使用 pgsql。 1 2 3</description>
    </item>
    
    <item>
      <title>Windows Bat总结</title>
      <link>http://example.org/bat/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/bat/</guid>
      <description>Windows Bat总结 最近项目需要再 windows 上做开发，而且一些自动化的处理需要使用 windows 的的脚本。所以做些记录，防止遗忘。 基本的语法 首先从基础开始吧，之前都是使</description>
    </item>
    
    <item>
      <title>搭建lamp环境</title>
      <link>http://example.org/lamp/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/lamp/</guid>
      <description>搭建lamp环境 lamp即 apache + mysql + php，是互联网常用架构。 要注意的是php依赖apache和mysql，所以要最后安装。系统环境为Cent</description>
    </item>
    
    <item>
      <title>搭建lnmp环境</title>
      <link>http://example.org/lnmp/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/lnmp/</guid>
      <description>搭建lnmp环境 lnmp即：nginx + mysql + php 与lamp不同的是，lnmp的php不在只是httpd中的一个库，lnmp架构中php作为一个</description>
    </item>
    
    <item>
      <title>深入理解计算机系统</title>
      <link>http://example.org/csapp/</link>
      <pubDate>Fri, 03 Dec 2021 10:17:16 +0800</pubDate>
      <author>935669265@qq.com (yzj)</author>
      <guid>http://example.org/csapp/</guid>
      <description>深入理解计算机系统 一、计算机系统漫游 计算机系统是由硬件和软件组成。 1.1 信息就是位 + 上下文 系统中所有的信息——包括磁盘文件、内存中的程序、内存中</description>
    </item>
    
  </channel>
</rss>
