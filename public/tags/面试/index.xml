<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>面试 - 标签 - YZJ 的博客</title>
        <link>http://example.org/tags/%E9%9D%A2%E8%AF%95/</link>
        <description>面试 - 标签 - YZJ 的博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>935669265@qq.com (yzj)</managingEditor>
            <webMaster>935669265@qq.com (yzj)</webMaster><lastBuildDate>Mon, 16 May 2022 15:10:34 &#43;0800</lastBuildDate><atom:link href="http://example.org/tags/%E9%9D%A2%E8%AF%95/" rel="self" type="application/rss+xml" /><item>
    <title>Io多路复用</title>
    <link>http://example.org/io%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/</link>
    <pubDate>Mon, 16 May 2022 15:10:34 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/io%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/</guid>
    <description><![CDATA[select 第一种是select。 我们可以设置要等待的描述符，也可以设置等待超时时间。如果有准备好的fd，或达到指定超时时间，select函数就会返回]]></description>
</item><item>
    <title>Map和slice原理底层</title>
    <link>http://example.org/map%E5%92%8Cslice%E5%8E%9F%E7%90%86%E5%BA%95%E5%B1%82/</link>
    <pubDate>Tue, 10 May 2022 21:11:52 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/map%E5%92%8Cslice%E5%8E%9F%E7%90%86%E5%BA%95%E5%B1%82/</guid>
    <description><![CDATA[slice 切片 切片是基于数组实现的，它的底层是数组，可以理解为对 底层数组的抽象。 切片不是线程安全的 源码包中src/runtime/slice.go 定]]></description>
</item><item>
    <title>内存逃逸</title>
    <link>http://example.org/%E5%86%85%E5%AD%98%E9%80%83%E9%80%B8/</link>
    <pubDate>Tue, 10 May 2022 09:33:31 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/%E5%86%85%E5%AD%98%E9%80%83%E9%80%B8/</guid>
    <description><![CDATA[内存逃逸 暂时性内存泄漏 获取长字符串中的一段导致长字符串未被释放 获取长slice中的一段导致长slice未被释放 在长slice中新建slice]]></description>
</item><item>
    <title>Redis</title>
    <link>http://example.org/redis/</link>
    <pubDate>Mon, 09 May 2022 13:23:30 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/redis/</guid>
    <description><![CDATA[redis 简介：Redis ，全称 Remote Dictionary Server ，是一个基于内存的高性能 Key-Value 数据库。 脚本自动安装任意版本 sh redis-install.sh 4.0.10 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25]]></description>
</item><item>
    <title>三色标记法</title>
    <link>http://example.org/%E4%B8%89%E8%89%B2%E6%A0%87%E8%AE%B0%E6%B3%95/</link>
    <pubDate>Fri, 06 May 2022 23:28:04 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/%E4%B8%89%E8%89%B2%E6%A0%87%E8%AE%B0%E6%B3%95/</guid>
    <description><![CDATA[Go V1.8的三色标记法+混合写屏障机制 具体操作： GC开始将栈上的对象全部扫描标记为黑色（之后不再进行二次重复扫描，无需stw） GC期间，任何]]></description>
</item><item>
    <title>Mysql</title>
    <link>http://example.org/mysql/</link>
    <pubDate>Tue, 26 Apr 2022 14:04:35 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/mysql/</guid>
    <description><![CDATA[Mysql面试 什么是MySQL MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，属于 Oracle 旗下产品。MySQL 是最流行的关系型数]]></description>
</item><item>
    <title>100题</title>
    <link>http://example.org/100%E9%A2%98/</link>
    <pubDate>Wed, 20 Apr 2022 13:48:23 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/100%E9%A2%98/</guid>
    <description><![CDATA[Golang精编100题 能力模型 级别 模型 初级 primary: 熟悉基本语法，能够看懂代码的意图； 在他人指导下能够完成用户故事的开发，编写的代码符合Clean]]></description>
</item><item>
    <title>Interface</title>
    <link>http://example.org/interface/</link>
    <pubDate>Wed, 13 Apr 2022 21:03:11 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/interface/</guid>
    <description><![CDATA[interface的底层实现 所有interface，包括有方法和空接口，在内存中都是占据两个字长，在32位机器上就是8个字节，在64位机器上]]></description>
</item><item>
    <title>GMP</title>
    <link>http://example.org/gmp/</link>
    <pubDate>Tue, 12 Apr 2022 21:26:15 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/gmp/</guid>
    <description><![CDATA[GMP模型 M M代表内核级线程,一个M就是一个线程,goroutine就是跑在M之上的;M是一个很大的结构,里面维护了小对象内存cache、当]]></description>
</item><item>
    <title>空切片和nil切片</title>
    <link>http://example.org/%E7%A9%BA%E5%88%87%E7%89%87%E5%92%8Cnil%E5%88%87%E7%89%87/</link>
    <pubDate>Mon, 11 Apr 2022 23:24:19 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/%E7%A9%BA%E5%88%87%E7%89%87%E5%92%8Cnil%E5%88%87%E7%89%87/</guid>
    <description><![CDATA[空切片和nil切片 问题： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 package main import ( &#34;fmt&#34; &#34;reflect&#34; &#34;unsafe&#34; ) func main() { var s1 []int // nil切片 s2 := make([]int,0) // 空切片 s4 := make([]int,0) // 空切片 fmt.Printf(&#34;s1 pointer:%+v, s2 pointer:%+v, s4]]></description>
</item></channel>
</rss>
