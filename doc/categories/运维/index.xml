<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>运维 - 分类 - lack 的个人博客</title>
        <link>http://xingyys.tech/categories/%E8%BF%90%E7%BB%B4/</link>
        <description>运维 - 分类 - lack 的个人博客</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 06 Aug 2020 15:21:50 &#43;0800</lastBuildDate><atom:link href="http://xingyys.tech/categories/%E8%BF%90%E7%BB%B4/" rel="self" type="application/rss+xml" /><item>
    <title>Scst结合FC</title>
    <link>http://xingyys.tech/posts/linux/scst%E7%BB%93%E5%90%88fc/</link>
    <pubDate>Thu, 06 Aug 2020 15:21:50 &#43;0800</pubDate><author>
        <name>Lack</name>
    </author><guid>http://xingyys.tech/posts/linux/scst%E7%BB%93%E5%90%88fc/</guid>
    <description><![CDATA[SCST 是 iscsi 的一种实现方式，它既可以使用 iscsi 协议共享本地磁盘，同时也支持 FC 协议。FC 协议需要硬件 FC HBA 卡的支持。 SCST 和 FC 的环境搭建如下看这里 。
环境配置 接下来 SCST 和 FC 的使用。首先需要有 scst 的环境： 保证 linux 内核中加载了 qla。使用 scstadm 查看所支持的驱动： 如果使用 FC 去共享磁盘，scst 需要创建和 FC 设备对应的 target。FC 设备和 target 属于一对一关系，而且创建 target 的名称要和 FC 设备的 ID 相同。查看 FC 设备的 ID 可以用以下的方式：1.查看内核中 qla2x00t (/sys/kernel/scst_tgt/targets/qla2x00t) 目录下的内容 2.直接查看 FC 设备的 port_id (/sys/class/fc_host/hostx/port_name)， 配置 FC SCST 服务端配置 创建 target, FC 设备和 target 一对一。
scstadmin -add_target 50:01:10:a0:00:16:bf:30 -driver qla2x00t 创建 device 对应本地的块文件]]></description>
</item><item>
    <title>Scst在线扩容</title>
    <link>http://xingyys.tech/posts/linux/scst%E5%9C%A8%E7%BA%BF%E6%89%A9%E5%AE%B9/</link>
    <pubDate>Thu, 09 Apr 2020 14:59:25 &#43;0800</pubDate><author>
        <name>Lack</name>
    </author><guid>http://xingyys.tech/posts/linux/scst%E5%9C%A8%E7%BA%BF%E6%89%A9%E5%AE%B9/</guid>
    <description><![CDATA[SCST 共享的磁盘支持在线扩容。操作如下：
scst 服务端 首先有一块 zfs 存储卷，现在将其容量从 15G 扩展到 20G。
zfs set volsize=20G tank/vol 修改 scst 中 device 的 size 属性
scstadmin -set_dev_attr device1 -attributes size=21474836480 -noprompt iscsi 客户端 重新扫描 target
iscsiadm -m node --target &lt;target_name&gt; -R 扩展磁盘容量，如果磁盘存储 mount 状态则先 umount。
resize2fs /dev/sdX e2fsck -f /dev/sdX resize2fs /dev/sdX 重新挂载，使用 df 即可发现磁盘的容量被修改。
FC 客户端 重新扫描 FC host
echo &#34;- - -&#34; &gt; /sys/class/scst_host/hostX/scan 扩展磁盘容量如上。]]></description>
</item><item>
    <title>Scst 安装和使用</title>
    <link>http://xingyys.tech/posts/linux/scst%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</link>
    <pubDate>Wed, 08 Apr 2020 14:59:25 &#43;0800</pubDate><author>
        <name>Lack</name>
    </author><guid>http://xingyys.tech/posts/linux/scst%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</guid>
    <description><![CDATA[安装 scst 安装 scst
wget https://ncu.dl.sourceforge.net/project/scst/scst-3.2.0.7058.tar.bz2 yum install bzip2 bunzip2 scst-3.2.0.7058.tar.bz2 tar xf scst-3.2.0.7058.tar 编译安装scst
make 2perf make scst make scst_install make iscsi make iscsi_install make scstadm make scstadm_install 查看是否被加载到内核了
lsmod |grep scst modinfo scst 启动 scst
modprobe scst modprobe scst_vdisk modprobe scst_disk modprobe scst_user modprobe scst_modisk modprobe scst_processor modprobe scst_raid modprobe scst_tape modprobe scst_cdrom modprobe scst_changer modprobe iscsi-scst iscsi-scstd 创建流程 创建 target
scstadmin -add_target iqn.1994-05.com.redhat:pv -driver iscsi 创建 block]]></description>
</item><item>
    <title>Nginx多组代理配置</title>
    <link>http://xingyys.tech/posts/linux/nginx%E5%A4%9A%E7%BB%84%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE/</link>
    <pubDate>Wed, 31 Jul 2019 15:25:05 &#43;0800</pubDate><author>
        <name>Lack</name>
    </author><guid>http://xingyys.tech/posts/linux/nginx%E5%A4%9A%E7%BB%84%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE/</guid>
    <description><![CDATA[一、需求 具体实现以下功能：使用 nginx 作为对外的服务机器，让客户端通过访问 nginx 所在的IP+端口的方式能访问内部多个系统，这样一来通过对单台机器作访问控制就可以保证内部系统的访问安全。实现思路如下：在对外的机器上部署 nginx 服务，通过 nginx 虚拟机功能和代理功能相结合实现多组代理。具体场景如下：
   代理服务器 代理服务     nginx 192.168.10.10:8080 192.168.10.11:8080   nginx 192.168.10.10:8081 192.168.10.11:9000    二、环境 测试环境如下：
 代理服务器：ip 192.168.10.10；系统 CentOS7 ;  需要代理的服务：192.168.10.11:8080 nginx ；192.168.10.11:9000 tomcat  三、配置代理 假如有两个服务需要配置代理，一个 web，一个 tomcat。web 运行在 192.168.10.11:8080 tomcat 运行在 192.168.10.11:9000 现在配置 nginx 代理。 1.安装 nginx先在代理服务器上安装 nginx，使用命令：
$ yum install -y nginx 安装成功后就可以尝试启动 nginx 服务器：
$ systemctl start nginx 启动服务成功后，nginx 就运行在 80 端口。 2.]]></description>
</item><item>
    <title>Windows Bat总结</title>
    <link>http://xingyys.tech/posts/windows/bat/</link>
    <pubDate>Fri, 22 Mar 2019 15:06:27 &#43;0800</pubDate><author>
        <name>Lack</name>
    </author><guid>http://xingyys.tech/posts/windows/bat/</guid>
    <description><![CDATA[最近项目需要再 windows 上做开发，而且一些自动化的处理需要使用 windows 的的脚本。所以做些记录，防止遗忘。
基本的语法 首先从基础开始吧，之前都是使用 linux bash 的。可以说 windows bat 脚本和 linux bash 脚本还是有很多区别的。
设置变量 变量设置使用的命令为set。
set a=&#34;hello world&#34; echo %a% 从上面的脚本中可以知道，使用set来设置变量，语法为set var=&lt;值&gt;。如果要引用这个变量的话就使用%var%。
 注：bat 脚本不能像 bash 中一样设置临时变量，只用将变量设置为环境变量。
 set命令的功能还是比较强大的，比如获取从键盘中输入的字符：
set /p a=&#34;Input a number:&#34; echo %a% 支持算术：
set /a a=1+2 echo %a% set /a a-=1 echo %a% set /a a*=3 echo %a% set /a a/=3 echo %a% 这个关键在于set /a 还有字符串的修改和截取：
:::::::::: 字符串的截取 :::::::::: set a=Hello Windows Bat :: 截取所有 set a=%a:~0% :: 截取指定的 set a=%a:~1,-1% set a=%a:~2,4% :::::::::: 字符串的替换 :::::::::: set a=Hello Windows :: 将Windows替换成Linux set a=%a:Windows=Linux% 注释 bat 中能实现注释功能的有两个::和rem。 它们的不同点是：rem是一条命令，在运行的时候相当于把rem本身及其后面的内容置空。既然它是一条命令，就必须处于单独的一行或者有类似 &ldquo;&amp;&rdquo; 的连接符号连接。 bat 遇到以冒号 &ldquo;:&rdquo; 开头的行时（忽略冒号前的空格），会将其后的语句识别为“标记”而不是命令语句，因此类似 &ldquo;:label&rdquo; 这样的在 bat 中仅仅是一个标记。]]></description>
</item><item>
    <title>iscsi共享磁盘服务</title>
    <link>http://xingyys.tech/posts/linux/iscsi%E5%85%B1%E4%BA%AB%E7%A3%81%E7%9B%98%E6%9C%8D%E5%8A%A1/</link>
    <pubDate>Sat, 26 Jan 2019 08:28:08 &#43;0000</pubDate><author>
        <name>作者</name>
    </author><guid>http://xingyys.tech/posts/linux/iscsi%E5%85%B1%E4%BA%AB%E7%A3%81%E7%9B%98%E6%9C%8D%E5%8A%A1/</guid>
    <description><![CDATA[iscsi简单介绍 iSCSI（Internet Small Computer System Interface，发音为/ˈаɪskʌzi/），Internet小型计算机系统接口，又称为IP-SAN，是一种基于因特网及SCSI-3协议下的存储技术，由IETF提出，并于2003年2月11日成为正式的标准。与传统的SCSI技术比较起来，iSCSI技术有以下三个革命性的变化：
 把原来只用于本机的SCSI协义透过TCP/IP网络发送，使连接距离可作无限的地域延伸； 连接的服务器数量无限（原来的SCSI-3的上限是15）； 由于是服务器架构，因此也可以实现在线扩容以至动态部署。  简单的说就是tcp协议仿真scsi，将本地的磁盘通过网络共享给其他机器，提供数据的远程存储。
iscsi基本概念 iscsi中有一些常用的基本概念，了解这些能帮助我们认识iscsi服务的具体工作原理，下面就用一张图表来说明：
   名词 说明     ACL 访问权限控制列表，用来验证客户端启动器的访问，通常是客户端 iSCSI 启动器的 IQN 名称   IQN 用于标识单个 iSCSI 目标和启动器的唯一名称(全部小写)   WWN 用于标识单个光纤通道端口和节点的唯一编号   TARGET iSCSI 服务器上的存储资源   LUN iSCSI 服务器上的块设备   initiator(启动器) 以软件或硬件实施的 iSCSI 客户端   NODE 单个 iSCSI 启动器或者目标   TPG 启动器或者目标上的单个 IP 连接地址   Portal 网络接口及端口    iscsi 安装配置 iscsi 服务管理的软件有多个，这里就简单介绍两个，targetcli和tgt。]]></description>
</item><item>
    <title>搭建lnmp环境</title>
    <link>http://xingyys.tech/posts/linux/lnmp/</link>
    <pubDate>Thu, 31 May 2018 09:57:17 &#43;0000</pubDate><author>
        <name>作者</name>
    </author><guid>http://xingyys.tech/posts/linux/lnmp/</guid>
    <description><![CDATA[lnmp即：nginx + mysql + php 与lamp不同的是，lnmp的php不在只是httpd中的一个库，lnmp架构中php作为一个服务，专门解析php。 同样的php依赖mysql，所以首先安装mysql 这里环境为CentOS6.5
安装mysql 这里选择免编译安装，可以在官网找到。在mysql5.5之后的版本不在开源了，但还可以选择mariadb的分支版本作为这个架构的代替。接下来就可以开始mysql的安装了。
下载mysql wget http://mirrors.sohu.com/mysql/MySQL-5.1/mysql-5.1.73-linux-i686-glibc23.tar.gz 这个版本有点低，可以自己选择合适版本
解压 tar -zxvf tar -zxvf mysql-5.1.73-linux-i686-glibc23.tar.gz 移动到指定目录 mv mysql-5.1.73-linux-i686-glibc23 /usr/local/mysql 创建mysql用户，但不允许登录，不创建家目录 useradd -s /sbin/nologin -M mysql -s表示指定bash，这里出于安全性考虑设置不允许登录，-M不创建家目录
创建数据库目录，并改为mysql属主 mkdir /data/mysql -pv chown -R mysql：mysql /data/mysql 初始化mysql cd /usr/local/mysql ./scripts/mysql_install_db --user=mysql --datadir=/data/mysql --user=*是指定用户mysql，--datadir=*是指定数据库目录。可以使用echo $?验证命令执行结果是否正确，0为正确。
mysql配置文件 cp /usr/local/mysql/support-files/my-large.cnf /etc/my.cnf vim /etc/my.cnf ...... port = 3306 #监听端口 socket = /tmp/mysql.sock #socket ..... log-bin=mysql-bin #修改mysql数据库时，记录日志 mysql启动脚本 cp /usr/local/mysql/mysql.server /etc/init.d/mysqld vim /etc/init.]]></description>
</item><item>
    <title>搭建lamp环境</title>
    <link>http://xingyys.tech/posts/linux/lamp/</link>
    <pubDate>Thu, 31 May 2018 09:13:23 &#43;0000</pubDate><author>
        <name>作者</name>
    </author><guid>http://xingyys.tech/posts/linux/lamp/</guid>
    <description><![CDATA[lamp即 apache + mysql + php，是互联网常用架构。
 要注意的是php依赖apache和mysql，所以要最后安装。系统环境为CentOS6.5
安装mysql 这里选择免编译安装，可以在官网找到。在mysql5.5之后的版本不在开源了，但还可以选择mariadb的分支版本作为这个架构的代替。接下来就可以开始mysql的安装了。
下载mysql wget http://mirrors.sohu.com/mysql/MySQL-5.1/mysql-5.1.73-linux-i686-glibc23.tar.gz 这个版本有点低，可以自己选择合适版本
解压 tar -zxvf tar -zxvf mysql-5.1.73-linux-i686-glibc23.tar.gz 移动到指定目录 mv mysql-5.1.73-linux-i686-glibc23 /usr/local/mysql 创建mysql用户，但不允许登录，不创建家目录 useradd -s /sbin/nologin -M mysql -s表示指定bash，这里出于安全性考虑设置不允许登录，-M不创建家目录
创建数据库目录，并改为mysql属主 mkdir /data/mysql -pv chown -R mysql：mysql /data/mysql 初始化mysql cd /usr/local/mysql ./scripts/mysql_install_db --user=mysql --datadir=/data/mysql --user=*是指定用户mysql，--datadir=*是指定数据库目录。可以使用echo $?验证命令执行结果是否正确，0为正确。
mysql配置文件 cp /usr/local/mysql/support-files/my-large.cnf /etc/my.cnf vim /etc/my.cnf ...... port = 3306 #监听端口 socket = /tmp/mysql.sock #socket ..... log-bin=mysql-bin #修改mysql数据库时，记录日志 mysql启动脚本 cp /usr/local/mysql/mysql.server /etc/init.d/mysqld vim /etc/init.]]></description>
</item></channel>
</rss>
